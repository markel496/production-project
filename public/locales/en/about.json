{
  "about_title": "Project Overview",
  "about_text": "Developed a fullstack application from scratch using React + TypeScript + Node.js + Express + MongoDB with a modern architecture (FSD), a custom UI component library, testing, and CI/CD. The project is fully aligned with real-world development practices and demonstrates frontend development skills in a production environment.",
  "working_title": "What I did in the project",
  "frontend_build": "Fully configured the build system (Webpack + Vite), Babel configuration, tsconfig, linters (ESLint, Stylelint), and Prettier.",
  "frontend_architecture": "Implemented an architecture with separation into modules and business entities, allowing scalability and code reuse.",
  "frontend_ui": "Created a custom UI library (>20 components: modals, dropdown menus, sidebar, skeletons, drawer, avatars, etc.) with theming support (3 themes: light, dark, green).",
  "frontend_i18n": "Implemented internationalization (i18n): RU/EN support, translation code splitting.",
  "frontend_optimisation": "Set up optimization and code splitting: async reducer and component loading, bundle analysis, list virtualization.",
  "frontend_ci_cd": "Configured CI/CD (GitHub Actions): automated checks for linters, unit tests, screenshot tests, Storybook deployment.",
  "frontend_testing": "Implemented full testing coverage:",
  "frontend_error_boundary": "Added ErrorBoundary for error handling.",
  "frontend_feature_flags": "Implemented feature flags and a dynamic user settings system.",
  "frontend_react_migration": "Migrated the project from React 17 to 18.",
  "backend_rest_api": "Implemented REST API with Node.js + Express.",
  "backend_mongoDB": "Used MongoDB (via Mongoose) for data storage.",
  "backend_crud": "Set up CRUD operations and collection management.",
  "backend_jwt_authorisation": "Implemented JWT-based authorization.",
  "backend_architecture": "Designed the server application architecture (controllers, services, models).",
  "skills_title": "Key skills that I applied and refined",
  "skills_architecture": "Frontend application architecture: modularity, code isolation, decomposition, reuse.",
  "skills_infrastructure": "Infrastructure setup (build, tests, CI/CD, linters).",
  "skills_ui": "Development of accessible and reusable UI components.",
  "skills_testing": "Full testing cycle (unit → integration → e2e).",
  "skills_optimisation": "Performance optimization (list virtualization, code splitting, async reducers, async components, using bundle analyzers, async library loading).",
  "skills_create_plugins": "Working with AST trees, writing custom babel/eslint plugins.",
  "skills_backend": "Backend development: Node.js + Express, REST API, working with MongoDB.",
  "skills_authorisation": "Implementation of authorization (JWT), middleware, validation, and error handling."
}
